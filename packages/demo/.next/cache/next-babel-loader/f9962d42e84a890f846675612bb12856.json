{"ast":null,"code":"import { useQuery } from \"@apollo/react-hooks\";\nimport getCollection from \"../queries/getCollection\";\nimport mapProductsToMultipleVariants from \"../../helpers/mapProductsToMultipleVariants\";\n\nvar useProducts = function useProducts(filters) {\n  var collectionName = filters.find(function (filter) {\n    return filter.name === \"collectionName\";\n  }).value;\n  var productsAmount = filters.find(function (filter) {\n    return filter.name === \"productsAmount\";\n  }).value;\n\n  var _useQuery = useQuery(getCollection, {\n    variables: {\n      collectionName: collectionName,\n      productsAmount: productsAmount\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading;\n\n  if (!data) {\n    return [data, loading];\n  }\n\n  var collectionByHandle = data.collectionByHandle;\n  var mappedProducts = mapProductsToMultipleVariants(collectionByHandle && collectionByHandle.products ? collectionByHandle.products : []);\n  return [mappedProducts, loading];\n};\n\nexport default useProducts;","map":{"version":3,"sources":["/Users/andrzej/Projects/storefront-ui/demo/graphql/hooks/useProducts.js"],"names":["useQuery","getCollection","mapProductsToMultipleVariants","useProducts","filters","collectionName","find","filter","name","value","productsAmount","variables","data","loading","collectionByHandle","mappedProducts","products"],"mappings":"AAAA,SAASA,QAAT,QAAyB,qBAAzB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,OAAOC,6BAAP,MAA0C,6CAA1C;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,OAAO,EAAI;AAC7B,MAAMC,cAAc,GAAGD,OAAO,CAACE,IAAR,CACrB,UAAAC,MAAM;AAAA,WAAIA,MAAM,CAACC,IAAP,KAAgB,gBAApB;AAAA,GADe,EAErBC,KAFF;AAGA,MAAMC,cAAc,GAAGN,OAAO,CAACE,IAAR,CACrB,UAAAC,MAAM;AAAA,WAAIA,MAAM,CAACC,IAAP,KAAgB,gBAApB;AAAA,GADe,EAErBC,KAFF;;AAJ6B,kBAQHT,QAAQ,CAACC,aAAD,EAAgB;AAChDU,IAAAA,SAAS,EAAE;AAAEN,MAAAA,cAAc,EAAdA,cAAF;AAAkBK,MAAAA,cAAc,EAAdA;AAAlB;AADqC,GAAhB,CARL;AAAA,MAQrBE,IARqB,aAQrBA,IARqB;AAAA,MAQfC,OARe,aAQfA,OARe;;AAY7B,MAAI,CAACD,IAAL,EAAW;AACT,WAAO,CAACA,IAAD,EAAOC,OAAP,CAAP;AACD;;AAd4B,MAgBrBC,kBAhBqB,GAgBEF,IAhBF,CAgBrBE,kBAhBqB;AAkB7B,MAAMC,cAAc,GAAGb,6BAA6B,CAClDY,kBAAkB,IAAIA,kBAAkB,CAACE,QAAzC,GACIF,kBAAkB,CAACE,QADvB,GAEI,EAH8C,CAApD;AAMA,SAAO,CAACD,cAAD,EAAiBF,OAAjB,CAAP;AACD,CAzBD;;AA2BA,eAAeV,WAAf","sourcesContent":["import { useQuery } from \"@apollo/react-hooks\";\nimport getCollection from \"../queries/getCollection\";\nimport mapProductsToMultipleVariants from \"../../helpers/mapProductsToMultipleVariants\";\n\nconst useProducts = filters => {\n  const collectionName = filters.find(\n    filter => filter.name === \"collectionName\"\n  ).value;\n  const productsAmount = filters.find(\n    filter => filter.name === \"productsAmount\"\n  ).value;\n\n  const { data, loading } = useQuery(getCollection, {\n    variables: { collectionName, productsAmount }\n  });\n\n  if (!data) {\n    return [data, loading];\n  }\n\n  const { collectionByHandle } = data;\n\n  const mappedProducts = mapProductsToMultipleVariants(\n    collectionByHandle && collectionByHandle.products\n      ? collectionByHandle.products\n      : []\n  );\n\n  return [mappedProducts, loading];\n};\n\nexport default useProducts;\n"]},"metadata":{},"sourceType":"module"}